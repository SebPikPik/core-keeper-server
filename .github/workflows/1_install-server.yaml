# This workflow will triage pull requests and apply a label based on the
# paths that are modified in the pull request.
#
# To use this workflow, you will need to set up a .github/labeler.yml
# file with configuration.  For more information, see:
# https://github.com/actions/labeler

name: CoreKeeper server deployment
on: 
  workflow_dispatch:
  push:
jobs:
  configure:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
    - uses: actions/labeler@v4
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
    - name: Checkout
      uses: actions/checkout@v4
  requirements:
    needs: configure
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: "Install requirements"
        uses: appleboy/ssh-action@v1.0.3
        env:
          CKPASS: ${{ secrets.CKSECRET }}
          EMAIL: ${{ secrets.EMAIL }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.ADMIN }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.ROOT_KEY }}
          envs: CKPASS,EMAIL
          script: |
            dpkg --add-architecture i386; apt update; apt install -y curl wget file tar bzip2 gzip unzip bsdmainutils python3 util-linux ca-certificates binutils bc jq tmux netcat lib32gcc-s1 lib32stdc++6 libsdl2-2.0-0:i386 steamcmd xvfb libxi6 binutils bsdmainutils bzip2 lib32gcc-s1 lib32stdc++6 libsdl2-2.0-0:i386 libxi6 pigz unzip xvfb
            add-apt-repository multiverse; apt update
            apt-get upgrade -y
            echo steam steam/question select "I AGREE" | sudo debconf-set-selections
            echo steam steam/license note '' | sudo debconf-set-selections
            apt purge -y steamcmd && rm -rf /home/.steam/ /home/steam/ && apt install -y steamcmd
            id -u corekeeper-server &>/dev/null || useradd -mrU -s /usr/sbin/nologin corekeeper-server
            id -u ckserver &>/dev/null || useradd -p $CKPASS -m -s /bin/bash ckserver
            if [ ! -f /home/ckserver/.ssh/id_ed25519 ]; then sudo -u ckserver ssh-keygen -f /home/ckserver/.ssh/id_ed25519 -t ed25519 -a 200 -C "$EMAIL" -q -P "" && cat /home/ckserver/.ssh/id_ed25519.pub >> /home/ckserver/.ssh/authorized_keys; fi

  install_lgsm:
    needs: requirements
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: "Install LGSM server"
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ckserver
          port: ${{ secrets.PORT }}
          key: ${{ secrets.CK_KEY }}
          # password: ${{ secrets.CKSECRET }}
          debug: 
          script: |
            cd ~/
            curl -Lo linuxgsm.sh https://linuxgsm.sh
            chmod +x linuxgsm.sh
            bash linuxgsm.sh ckserver
            ./ckserver auto-install
            ./ckserver details

  scp_files:
    needs: install_lgsm
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: "copy file ServerConfig.json via ssh key"
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.ADMIN }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.ROOT_KEY }}
          # source: "tests/a.txt,tests/b.txt"
          source: "ServerConfig.json"
          overwrite: true
          target: "/home/ckserver/serverfiles/gamedata/ckserver/"