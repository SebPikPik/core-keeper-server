# This workflow will triage pull requests and apply a label based on the
# paths that are modified in the pull request.
#
# To use this workflow, you will need to set up a .github/labeler.yml
# file with configuration.  For more information, see:
# https://github.com/actions/labeler

name: CoreKeeper server deployment
on: 
  workflow_dispatch:

jobs:
  configure:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
    - uses: actions/labeler@v4
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
    - name: Checkout
      uses: actions/checkout@v4
  requirements:
    needs: configure
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: "Install requirements"
        uses: appleboy/ssh-action@v1.0.3
        env:
          FOO: "BAR"
          BAR: "FOO"
          SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.ADMIN }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.ROOT_KEY }}
          envs: FOO,BAR,SHA
          script: |
            dpkg --add-architecture i386; apt update; apt install -y curl wget file tar bzip2 gzip unzip bsdmainutils python3 util-linux ca-certificates binutils bc jq tmux netcat lib32gcc-s1 lib32stdc++6 libsdl2-2.0-0:i386 steamcmd xvfb libxi6
            add-apt-repository multiverse; dpkg --add-architecture i386; apt update
            apt-get upgrade -y
            echo steam steam/question select "I AGREE" | sudo debconf-set-selections
            echo steam steam/license note '' | sudo debconf-set-selections
            apt purge steamcmd && apt install -y steamcmd
            id -u corekeeper-server &>/dev/null || useradd -mrU -s /usr/sbin/nologin corekeeper-server
            id -u ckserver &>/dev/null || useradd -mrU -s /usr/sbin/nologin ckserver
            cd /home/ckserver && sudo ckserver -u curl -Lo linuxgsm.sh https://linuxgsm.sh && chmod +x linuxgsm.sh && bash linuxgsm.sh ckserver && ./ckserver install
  scp_files:
    needs: configure
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "copy file corekeeper-server.service via ssh key"
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.ADMIN }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.ROOT_KEY }}
          # source: "tests/a.txt,tests/b.txt"
          source: "corekeeper-server.service"
          overwrite: true
          target: /etc/systemd/system/
  
      - name: "copy file ServerConfig.json via ssh key"
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.ADMIN }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.ROOT_KEY }}
          # source: "tests/a.txt,tests/b.txt"
          source: "ServerConfig.json"
          overwrite: true
          target: "/home/steam/.config/unity3d/Pugstorm/Core Keeper/DedicatedServer/"

  # launch_server:
  #   needs: scp_files
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     pull-requests: write
  #   steps:
  #     - name: "Launch Server"
  #       uses: appleboy/ssh-action@v1.0.3
  #       env:
  #         FOO: "BAR"
  #         BAR: "FOO"
  #         SHA: ${{ github.sha }}
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.ADMIN }}
  #         port: ${{ secrets.PORT }}
  #         key: ${{ secrets.ROOT_KEY }}
  #         envs: FOO,BAR,SHA
  #         script: |
  #           echo "I am $FOO"
  #           find /home/corekeeper-server
  #           systemctl daemon-reload && systemctl enable corekeeper-server.service
  #           systemctl start corekeeper-server
        
